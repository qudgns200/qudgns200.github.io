I"æ<p>Algorithm_LeetCode_<span class="red">Longest Common Prefix</span>
(https://leetcode.com/problems/longest-common-prefix/)
<br /></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">longestCommonPrefix</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">strs</span><span class="o">)</span> <span class="o">{</span>
		<span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
		<span class="nc">String</span> <span class="n">result</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
		
		<span class="k">if</span><span class="o">(</span><span class="n">strs</span><span class="o">.</span><span class="na">length</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="n">result</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
		<span class="k">else</span> <span class="o">{</span>
			<span class="n">result</span> <span class="o">=</span> <span class="n">strs</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">toString</span><span class="o">();</span>
			<span class="k">if</span><span class="o">(</span><span class="n">result</span><span class="o">.</span><span class="na">length</span><span class="o">()==</span><span class="mi">0</span> <span class="o">||</span> <span class="n">result</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="n">result</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
			<span class="k">else</span> <span class="o">{</span>
				<span class="k">for</span><span class="o">(</span><span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">strs</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
					<span class="n">result</span> <span class="o">=</span> <span class="n">returnPrefix</span><span class="o">(</span><span class="n">strs</span><span class="o">[</span><span class="n">i</span><span class="o">],</span> <span class="n">result</span><span class="o">);</span>
				<span class="o">}</span>
			<span class="o">}</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">result</span><span class="o">;</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="nc">String</span> <span class="nf">returnPrefix</span><span class="o">(</span><span class="nc">String</span> <span class="n">strs</span><span class="o">,</span> <span class="nc">String</span> <span class="n">temp</span><span class="o">)</span> <span class="o">{</span>
		<span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">,</span><span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
		<span class="nc">StringBuffer</span> <span class="n">sb</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuffer</span><span class="o">();</span>
		<span class="n">sb</span><span class="o">.</span><span class="na">setLength</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
		<span class="k">while</span><span class="o">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="n">temp</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">&amp;&amp;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">strs</span><span class="o">.</span><span class="na">length</span><span class="o">())</span> <span class="o">{</span>
			<span class="k">if</span><span class="o">(</span><span class="n">temp</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)==</span><span class="n">strs</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">j</span><span class="o">))</span> <span class="o">{</span>
				<span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">temp</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">));</span>
			<span class="o">}</span> <span class="k">else</span> <span class="k">break</span><span class="o">;</span>
            <span class="n">i</span><span class="o">++;</span> <span class="n">j</span><span class="o">++;</span>
		<span class="o">}</span>
		<span class="k">if</span><span class="o">(</span><span class="n">sb</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>
		
		<span class="k">return</span> <span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
:ET